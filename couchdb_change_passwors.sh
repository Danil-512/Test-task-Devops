#!/bin/bash

# Задача скрипта - менять пароль для уже созданного пользователя

# Функция должна принимать три параметра:
## 1 - Имя пользователя
## 2 - Новый пароль для пользователя
## 3 - Мастер пароль (пароль администратора)

# Загрузка переменных окружения
if [ -f ".env" ]; then
  set -o allexport
  source .env
  set +o allexport
else
  echo "Не найден файл с переменными окружения"
  exit 1
fi

# Проверка количества переданных аргументов
if [ "$#" -ne 3 ]; then
  # Вывод в терминал текста ошибки
  echo "Неверное количество аргучентов. Пример: test 4321 1234"
  # Завершить работу скрипта
  exit 1
fi

# Переменные окружения я задал, но с ними может что-то произойти, поэтому стоит добавить проверку
if [ -z "$COUCHDB_ADMIN_USER" ]; then
  # Вывод в терминал текста ошибки
  echo "Ошибка в работе скрипта. Не найдена переменная окружения COUCHDB_ADMIN_USER"
  # Завершить работу скрипта
  exit 1
elif [ -z "$COUCHDB_ADMIN_PASSWORD" ]; then
  # Вывод в терминал текста ошибки
  echo "Ошибка в работе скрипта. Не найдена переменная окружения COUCHDB_ADMIN_PASSWORD"
  # Завершить работу скрипта
  exit 1
fi

# Объявление переменных, присвоение значений из параметров
USER_NAME="$1"
NEW_PASS="$2"
MASTER_PASS="$3"
# Переменная с адресом базы. Из нее будут получены данные пользователя
DB_PATH="http://localhost:5984"

# Проверка корректности пароля администратора (мастер пароль)
if [ "$MASTER_PASS" != "$COUCHDB_ADMIN_PASSWORD" ]; then
  echo "Передан неверный мастер пароль."
  exit 1
fi

# Получение данных из базы. Формат - JSON (список словарей, если языком питона)
USER_DATA=$(
  curl -s -X GET -u "$COUCHDB_ADMIN_USER:$COUCHDB_ADMIN_PASSWORD" "$DB_PATH/_users/org.couchdb.user:$USER_NAME"
)

# Проверка на существование пользователя
if [[ "$USER_DATA"  == *"error"* ]]; then
  echo "Ошибка в работе скрипта. Пользователь не найден."
  exit 1
fi

# Если мастер пароль верный и пользователь найден, можно присваивать новый пароль.
## Сначала изменю переменную (JSON), потом  она будет отправляться в субд
NEW_DATA=$(
  echo "$USER_DATA" | jq --arg new_pass "$NEW_PASS" '.password = $new_pass'
)

# Отправление в базу запроса на изменение данных. Переменная RESP будет хранить ответ
RESP=$(
  curl -s -X PUT \
  -u "$COUCHDB_ADMIN_USER:$COUCHDB_ADMIN_PASSWORD" \
  -H "Content-Type: application/json" \
  -d "$NEW_DATA" \
  "$DB_PATH/_users/org.couchdb.user:$USER_NAME"
)

# Проверка статуса ответа
if [[ "$RESP" == *"\"ok\":true"*  ]]; then
  echo "Пароль успешно изменен."
else
  echo "Ошибка в работе скрипта. Пароль не был изменен"
fi
